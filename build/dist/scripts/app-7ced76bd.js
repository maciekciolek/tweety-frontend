/**
 * generator-cg-gas - Yeoman Generator for Enterprise Angular projects, with Gulp Angular Sass
 * @version v3.3.4
 * @link https://github.com/Lunatic83/generator-cg-gas
 * @license 
 */
!function(){angular.module("tweety",["tweety.core","tweety.events","tweety.auth"]),angular.module("tweety").config(["$stateProvider","$urlRouterProvider","$locationProvider","$translateProvider","FacebookProvider","$httpProvider",function($stateProvider,$urlRouterProvider,$locationProvider,$translateProvider,FacebookProvider,$httpProvider){$locationProvider.html5Mode({enabled:!1,requireBase:!1}),$urlRouterProvider.otherwise("/"),$translateProvider.useStaticFilesLoader({prefix:"assets/i18n/",suffix:".json"}),$translateProvider.preferredLanguage("en_EN"),FacebookProvider.setSdkVersion("v2.3"),FacebookProvider.init("1431313060510842"),$httpProvider.interceptors.push("AuthInterceptor")}]),angular.module("tweety").run(["$rootScope","AuthService","$state","UsersService","authService",function($rootScope,AuthService,$state,UsersService,authService){AuthService.isUserLoggedIn()===!0&&UsersService.validate({access_token:AuthService.getAccessToken()},function(response){authService.loginConfirmed({accessToken:AuthService.getAccessToken(),userType:response.user_type})}),$rootScope.$on("event:auth-loginConfirmed",function(event,data){$rootScope.loggedIn=!0,$rootScope.userType=data.userType,AuthService.setLoginUser(data.accessToken)}),$rootScope.$on("event:auth-loginRequired",function(){$state.go("auth.login")}),$rootScope.$on("event:auth-forbidden",function(){$state.go("auth.login")}),$rootScope.safeApply=function(fn){var phase=$rootScope.$$phase;"$apply"===phase||"$digest"===phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)}}])}(),function(){angular.module("tweety.core",["ui.router","pascalprecht.translate","ngResource","facebook","ngCookies","ui.bootstrap","http-auth-interceptor"])}(),function(){angular.module("tweety.events",["tweety.core"]),angular.module("tweety.events").config(["$stateProvider",function($stateProvider){$stateProvider.state("events",{url:"/events",template:"<ui-view></ui-view>","abstract":!0}).state("events.create",{url:"/create",templateUrl:"modules/events/partial/eventCreate/eventCreate.html",controller:"EventCreateCtrl",controllerAs:"vm"}).state("events.list",{url:"/list",templateUrl:"modules/events/partial/eventList/eventList.html",controller:"EventListCtrl",controllerAs:"vm"}).state("events.show",{url:"/show/:eventId",templateUrl:"modules/events/partial/eventShow/eventShow.html",controller:"EventShowCtrl",controllerAs:"vm"})}])}(),function(){function EventCreate(EventsService){var vm=this;vm.success=!1,vm.error=!1,vm.createEvent=function(){vm.success=!1,vm.error=!1,EventsService.create(vm.event,function(response){vm.success=!0},function(response){vm.error=response.data.error})}}angular.module("tweety.events").controller("EventCreateCtrl",EventCreate),EventCreate.$inject=["EventsService"]}(),function(){function EventListCtrl(EventsService){var vm=this;EventsService.list(function(response){vm.events=response.events})}angular.module("tweety.events").controller("EventListCtrl",EventListCtrl),EventListCtrl.$inject=["EventsService"]}(),function(){function EventsService($resource,ApplicationConfig){return $resource(ApplicationConfig.apiAddress+"/events/:id",{},{list:{isArray:!1,method:"GET"},get:{method:"GET",isArray:!1},create:{method:"POST",isArray:!1}})}angular.module("tweety").factory("EventsService",EventsService),EventsService.$inject=["$resource","ApplicationConfig"]}(),function(){function ApplicationConfig(){return{apiAddress:"http://7ada2a0a.ngrok.io/api"}}angular.module("tweety").factory("ApplicationConfig",ApplicationConfig)}(),function(){function EventShowCtrl($stateParams,EventsService,$modal,CommentsService,$translate){var vm=this,loadEvent=function(){EventsService.get({id:$stateParams.eventId},function(response){vm.event=response;var comments=_.groupBy(vm.comments,function(element,index){return Math.floor(index/3)});vm.event.groupedComments=_.toArray(comments)})};loadEvent(),vm.addComment=function(){$modal.open({templateUrl:"modules/events/addComment/addComment.html",controller:"AddCommentCtrl"}).result.then(function(result){var request={content:result.text,event_id:vm.event.id};CommentsService.add(request,function(){loadEvent(),BootstrapDialog.alert($translate.instant("events.show.comment.success"))},function(){BootstrapDialog.alert($translate.instant("events.show.comment.error"))})})}}angular.module("tweety.events").controller("EventShowCtrl",EventShowCtrl),EventShowCtrl.$inject=["$stateParams","EventsService","$modal","CommentsService","$translate"]}(),function(){angular.module("tweety.auth",["tweety.core"]),angular.module("tweety.auth").config(["$stateProvider",function($stateProvider){$stateProvider.state("auth",{url:"/auth",template:"<ui-view></ui-view>","abstract":!0}).state("auth.login",{url:"/login",templateUrl:"modules/auth/partial/login/login.html",controller:"LoginCtrl",controllerAs:"vm"}).state("auth.register",{url:"/register/:accessToken",templateUrl:"modules/auth/partial/register/register.html",controller:"RegisterCtrl",controllerAs:"vm"})}])}(),function(){function LoginCtrl(Facebook,authService,UsersService,$state){var vm=this;vm.success=!1,vm.login=function(){Facebook.login(function(response){var accessToken=response.authResponse.accessToken;UsersService.validate({access_token:accessToken},function(response){authService.loginConfirmed({accessToken:accessToken,userType:response.user_type}),vm.success=!0},function(error){404==error.status&&$state.go("auth.register",{accessToken:accessToken})})})}}angular.module("tweety.auth").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["Facebook","authService","UsersService","$state"]}(),function(){function AuthService($cookieStore,$rootScope){return{setLoginUser:function(accessToken){$cookieStore.put("accessToken",accessToken)},isUserLoggedIn:function(){return void 0!==$cookieStore.get("accessToken")},getAccessToken:function(){return $cookieStore.get("accessToken")}}}angular.module("tweety").factory("AuthService",AuthService),AuthService.$inject=["$cookieStore"]}(),function(){function UsersService($resource,ApplicationConfig){return $resource(ApplicationConfig.apiAddress+"/users/:type",{},{validate:{isArray:!1,method:"GET",params:{type:"validate"}},register:{isArray:!1,method:"POST"}})}angular.module("tweety").factory("UsersService",UsersService),UsersService.$inject=["$resource","ApplicationConfig"]}(),function(){function AuthInterceptor($cookieStore){return{request:function(config){if(void 0!=config){var token=$cookieStore.get("accessToken");void 0!=token&&(config.headers["X-Access-Token"]=token)}return config}}}angular.module("tweety").factory("AuthInterceptor",AuthInterceptor),AuthInterceptor.$inject=["$cookieStore"]}(),function(){function RegisterCtrl($translate,UsersService,$stateParams,authService){var vm=this;vm.errors=[],vm.success=!1,vm.registerData={type:"commenter",login:"",access_token:$stateParams.accessToken},vm.types=[{type:"commenter",translation:"auth.register.commenter"},{type:"creator",translation:"auth.register.creator"}],vm.register=function(){vm.errors=[],UsersService.register({user:vm.registerData},function(response){authService.loginConfirmed({accessToken:$stateParams.accessToken,userType:vm.registerData.type}),vm.success=!0},function(error){422==error.status&&(vm.errors=error.data.errors)})},_.each(vm.types,function(obj){obj.translation=$translate.instant(obj.translation)})}angular.module("tweety.auth").controller("RegisterCtrl",RegisterCtrl),RegisterCtrl.$inject=["$translate","UsersService","$stateParams","authService"]}(),angular.module("tweety.events").controller("AddCommentCtrl",["$scope","$modalInstance",function($scope,$modalInstance){$scope.addComment=function(){$modalInstance.close({text:$scope.text})}}]),function(){function CommentsService($resource,ApplicationConfig){return $resource(ApplicationConfig.apiAddress+"/comments/:id",{},{add:{isArray:!1,method:"POST"}})}angular.module("tweety").factory("CommentsService",CommentsService),CommentsService.$inject=["$resource","ApplicationConfig"]}(),angular.module("tweety").directive("showAuthenticated",function(){return{restrict:"A",link:function(scope,element,attrs,fn){var refresh=function(){scope.loggedIn===!0?$(element).show():$(element).hide()};refresh(),scope.$on("event:auth-loginConfirmed",refresh)}}}),angular.module("tweety").directive("showAuthenticatedCreator",function(){return{link:function(scope,element,attrs,fn){var refresh=function(){scope.loggedIn===!0&&"creator"===scope.userType?$(element).show():$(element).hide()};refresh(),scope.$on("event:auth-loginConfirmed",refresh)}}});